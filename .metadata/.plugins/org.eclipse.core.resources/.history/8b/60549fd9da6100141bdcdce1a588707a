// AVF-1411 - Project 1a
// Fred L. Strout
// Created on: 10/30/2014

var openUI = require("ui");

// Wrap the whole package in a function for stronger execution control
var netCheck = function(url){ // pass in the url from the function call for improved modularization
	
	// Create a variable to pass to the onload property of the createHTTPClient method
	var loadData = function (e){
		var remoteData = JSON.parse(this.responseText);
		var observe = remoteData.current_observation;
		var forecast = remoteData.forecast.simpleforecast.forecastday[0];
		//console.log(remoteData);
		
		var icon = observe.icon_url;
		var location = "Forecast for: " + observe.display_location.full;
		var feels = "Feels like: " + observe.feelslike_f + " F";
		var last = observe.observation_time;
		var condition = observe.weather;
		var min_max = "Min: " + forecast.low.fahrenheit + " / Max: " + forecast.high.fahrenheit;
		var fahrenheit = observe.temp_f + "\U00B0F";
		var celsius = observe.temp_c + " C";
		var humidity = observe.relative_humidity;
		var precip = observe.precip_today_in;
		var heat = observe.heat_index_f;
		var press = observe.pressure_in;
		var windSpeed = observe.wind_mph;
		var windDirection = observe.wind_dir;
		var windDegrees = observe.wind_degrees;
		
		//console.log(icon);
		console.log(feels);
		console.log(location);
		console.log(last);
		console.log(condition);
		console.log(min_max);
		console.log(fahrenheit);
		console.log(celsius);
		console.log(humidity);
		console.log(precip);
		console.log(heat);
		console.log(press);
		console.log(windSpeed);
		console.log(windDirection);
		console.log(windDegrees);
		
		//console.log(icon);
		/*var posts = thisData.data.children;
		var postArray = [];
		
		// Loop through the remote data to extract only the desired data and push that data to its own array
		for(i=0, j=posts.length; i<j; i++){
			var post = {
				title: posts[i].data.title,
				picture: posts[i].data.thumbnail
			};
			
			// Push the extracted data to the array
			postArray.push(post);
		};
		
		// console.log(postArray);
		display.displayData(postArray);*/
		openUI.buildUI(icon);
	};
	
	// Create an alert box to display an error message for the onerror property of the createHTTPClient method
	var errorData = function (e){
		alert("Error: " + e.error);
	};
	
	// If statement to detect if the device is connected to the Network
	if (Ti.Network.online){ // If True, then
		var remoteData = Ti.Network.createHTTPClient({
			onload: loadData,
			onerror: errorData
		});
		remoteData.open("GET", url);
		remoteData.send();
		
	}else{ // If False, then
		alert("Network unavailable. Check your settings.");
	};
};

exports.checkNet = netCheck;